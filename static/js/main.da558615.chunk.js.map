{"version":3,"sources":["Lab3/api.js","Lab3/Lab3.js","Lab2/helpers.js","Lab2/Lab2.js","Lab1/helpers.js","Lab1/Lab1.js","App.js","index.js"],"names":["data","M","lowerBound","A","J","iteration","alpha","x","c","startStrategy","optimal","cost","Lab3","console","log","className","map","row","j","clsx","e","i","toFixed","join","obj","_c","_x","k","min","Math","max","random","round","epsilon","u","l","index","length","slice","sumArr","a","b","_","nextStrategy","value","r","v","filter","strs","iters","makeTable","n","y","table","push","parseFloat","transpose","m","minMaxIndexes","dim","max_value","max_value_j","ttable","minmax_i","minmax_j","minmax","maxMinIndexes","min_value","min_value_j","maxmin_i","maxmin_j","maxmin","bR","str_a","str_b","strs_a","strs_b","uppers","lowers","winning_A","losing_B","iterations","eps","upper","lower","stA","stB","iA","indexOf","iB","algorithm","result","t","hasPoint","text","Lab2","useState","d","state","useRef","render","setRender","useEffect","current","el","tm","mima","mami","V","Lab1","setState","area","X","Y","headKeys","ref","rows","columns","onClick","split","forEach","alert","key","items","item","Array","App","activeClassName","to","path","pathname","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da558615.chunk.js","sourcesContent":["export const data = {\n    M: [\n        [11, 10, 15],\n        [16, 13, 5],\n        [15, 20, 10]\n    ],\n    data: [\n        {\n            lowerBound: 5.0,\n            A: [[15], [5], [10]],\n            J: [2],\n            iteration: 1,\n            \"x`\": [1.0, 0.0, 0.0],\n            \"c`\": [11.0, 10.0, 15.0],\n            alpha: [0.38461538461538464, 0.6153846153846154],\n            x: [0.6153846153846154, 0.38461538461538464, 0.0],\n            c: [[12.923076923076923, 11.153846153846153, 11.153846153846155]]\n        },\n        {\n            lowerBound: 11.153846153846153,\n            A: [[10], [13], [20]],\n            J: [1],\n            iteration: 2,\n            \"x`\": [0.0, 0.0, 1.0],\n            \"c`\": [15.0, 20.0, 10.0],\n            alpha: [0.9999999999999999, 1.9348838770510545e-16],\n            x: [0.6153846153846153, 0.3846153846153846, 1.9348838770510545e-16],\n            c: [[12.923076923076925, 11.153846153846155, 11.153846153846155]]\n        },\n        {\n            lowerBound: 11.153846153846155,\n            A: [\n                [10, 15],\n                [13, 5],\n                [20, 10]\n            ],\n            J: [1, 2],\n            iteration: 3,\n            \"x`\": [0.6666666666666666, 0.0, 0.3333333333333333],\n            \"c`\": [12.333333333333332, 13.333333333333332, 13.333333333333332],\n            alpha: [0.3611111111111107, 0.6388888888888893],\n            x: [0.6481481481481481, 0.13888888888888873, 0.21296296296296316],\n            c: [[12.546296296296296, 12.546296296296298, 12.546296296296298]]\n        },\n        {\n            lowerBound: 12.546296296296296,\n            A: [[11], [16], [15]],\n            J: [0],\n            iteration: 4,\n            \"x`\": [0.0, 1.0, 0.0],\n            \"c`\": [16.0, 13.0, 5.0],\n            alpha: [0.9999999999999998, 2.53257945853045e-16],\n            x: [0.648148148148148, 0.13888888888888895, 0.2129629629629631],\n            c: [[12.546296296296296, 12.546296296296298, 12.546296296296296]]\n        },\n        {\n            lowerBound: 12.546296296296296,\n            A: [\n                [11, 15],\n                [16, 5],\n                [15, 10]\n            ],\n            J: [0, 2],\n            iteration: 5,\n            \"x`\": [0.5555555555555555, 0.0, 0.44444444444444453],\n            \"c`\": [12.777777777777779, 14.444444444444446, 12.777777777777779],\n            alpha: [0.0, 1.0],\n            x: [0.5555555555555555, 0.0, 0.44444444444444453],\n            c: [[12.777777777777779, 14.444444444444446, 12.777777777777779]]\n        }\n    ],\n    startStrategy: \"Начальная стратегия: 2\",\n    optimal: [0.5555555555555555, 0.0, 0.44444444444444453],\n    cost: 12.546296296296296\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport \"../style.css\";\nimport { data } from \"./api.js\";\n\nexport const Lab3 = () => {\n    console.log(data);\n\n    return (\n        <div className=\"lab2-box\">\n            <div className=\"inner\">\n                <h1 className=\"title\">Монотонный итеративный алгоритм</h1>\n\n                <div className=\"table-min\">\n                    <div className=\"title-min bold\">Исходная матрица:</div>\n                    <div className=\"box\">\n                        {data.M.map((row, j) => (\n                            <div\n                                key={`row-${j}-input`}\n                                className={clsx(\"row-min\", j % 2 && \"grey\")}\n                            >\n                                {row.map((e, i) => (\n                                    <div\n                                        key={`row-${j}-item-${i}-input`}\n                                        className={clsx(\"item-min\")}\n                                    >\n                                        {e}\n                                    </div>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"title-min bold\">{data.startStrategy}</div>\n                <div className=\"title-min bold\">\n                    Оптимальная стратегия игрока X: [\n                    {data.optimal.map((e) => e.toFixed(3)).join(\" \")}]\n                </div>\n                <div className=\"title-min bold\">\n                    Цена игры: {data.cost.toFixed(3)}\n                </div>\n            </div>\n\n            <div className=\"flex-box\">\n                {data.data?.map((obj, j) => {\n                    const { lowerBound, A, J, iteration, alpha, x, c } = obj;\n                    const _c = obj[\"c`\"];\n                    const _x = obj[\"x`\"];\n\n                    return (\n                        <div key={`t-${j}`} className=\"table-min offset\">\n                            <div className=\"title-min bold\">\n                                Итерация: {iteration}\n                            </div>\n                            <div className=\"title-min\">\n                                Нижняя граница: {lowerBound.toFixed(3)}\n                            </div>\n                            <div className=\"title-min\">J = [{J.join(\" \")}]</div>\n                            <div className=\"title-min\">\n                                ~с = [{_c.map((e) => e.toFixed(3)).join(\" \")}]\n                            </div>\n                            <div className=\"title-min\">\n                                ~x = [{_x.map((e) => e.toFixed(3)).join(\" \")}]\n                            </div>\n                            <div className=\"title-min\">\n                                x = [{x.map((e) => e.toFixed(3)).join(\" \")}]\n                            </div>\n                            <div className=\"title-min\">\n                                c = [{c[0].map((e) => e.toFixed(3)).join(\" \")}]\n                            </div>\n                            <div className=\"title-min\">\n                                alpha = [\n                                {alpha.map((e) => e.toFixed(3)).join(\" \")}]\n                            </div>\n                            <div className=\"\">\n                                <div className=\"title-min bold\">A:</div>\n                                <div className=\"box\">\n                                    {A.map((row, i) => (\n                                        <div\n                                            key={`row-${j}-item-${i}-A`}\n                                            className={clsx(\n                                                \"row-min\",\n                                                i % 2 === 0 && \"grey\"\n                                            )}\n                                        >\n                                            {row.map((e, k) => (\n                                                <div\n                                                    className={clsx(\"item-min\")}\n                                                >\n                                                    {e}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n","const { min, max, random, round } = Math;\n\nconst epsilon = (u, l, k) => {\n    const index = u.length - (k + 1);\n    return min(...u.slice(index)) - max(...l.slice(index));\n};\n\n// const minmax = (m) => min(...m.map((row) => max(...row)));\n// const maxmin = (m) => max(...m.map((row) => min(...row)));\nconst sumArr = (a, b) => a.map((_, i) => a[i] + b[i]);\n\nconst nextStrategy = (row, value) => {\n    const r = row.map((v, i) => ({ v, i })).filter((e) => e.v === value);\n    return r[round(random() * (r.length - 1))].i;\n};\n\nconst optimal = (strs, iters) => {\n    return strs.map((_, i) => {\n        return (strs.filter((v) => v === i).length / iters);\n    });\n};\n\nconst a = -10,\n    b = 40 / 3,\n    c = 40,\n    d = -16,\n    e = -32,\n    k = 3;\n\nconst H = (x, y) => a * x ** 2 + b * y ** 2 + c * x * y + d * x + e * y;\n\nconst makeTable = (n) => {\n    const table = [];\n    for (let i = 0; i <= n; ++i) {\n        const row = [];\n        for (let j = 0; j <= n; ++j) {\n            row.push(parseFloat(H(i / n, j / n).toFixed(3)));\n        }\n        table.push(row);\n    }\n\n    return table;\n};\n\nconst transpose = (m) => m[0].map((_, i) => m.map((x) => x[i]));\nconst minMaxIndexes = (table, dim) => {\n    const ttable = transpose(table);\n    let minmax_i = 0,\n        minmax_j = 0;\n    let minmax = max(...ttable[0]);\n    let max_value, max_value_j;\n\n    for (let i = 0; i < dim; ++i) {\n        max_value = ttable[i][0];\n        max_value_j = 0;\n        for (let j = 0; j < dim; ++j) {\n            if (max_value < ttable[i][j]) {\n                max_value = ttable[i][j];\n                max_value_j = j;\n            }\n        }\n\n        if (max_value <= minmax) {\n            minmax = max_value;\n            minmax_i = i;\n            minmax_j = max_value_j;\n        }\n    }\n    return [minmax_i, minmax_j];\n};\n\nconst maxMinIndexes = (table, dim) => {\n    let maxmin_i = 0,\n        maxmin_j = 0;\n    let maxmin = min(...table[0]);\n    let min_value, min_value_j;\n\n    for (let i = 0; i < dim; ++i) {\n        min_value = table[i][0];\n        min_value_j = 0;\n        for (let j = 0; j < dim; ++j) {\n            if (min_value > table[i][j]) {\n                min_value = table[i][j];\n                min_value_j = j;\n            }\n        }\n\n        if (min_value >= maxmin) {\n            maxmin = min_value;\n            maxmin_i = i;\n            maxmin_j = min_value_j;\n        }\n    }\n\n    console.log(\"[maxmin_j, maxmin_i];\", [maxmin_j, maxmin_i]);\n    return [maxmin_j, maxmin_i];\n};\n\nconst randomValue = (bound) => round(random() * bound);\n\nconst bR = (table, dim) => {\n    const ttable = transpose(table);\n\n    let str_a = round(random() * 2);\n    let str_b = round(random() * 2);\n\n    let strs_a = [str_a],\n        strs_b = [str_b],\n        uppers = [],\n        lowers = [],\n        winning_A = ttable[str_a],\n        losing_B = table[str_b];\n\n    let E = 0.1,\n        iterations = 1,\n        eps = 1;\n\n    while (eps > E) {\n        let max_value = max(...winning_A),\n            min_value = min(...losing_B),\n            upper = max_value / iterations,\n            lower = min_value / iterations;\n\n        uppers.push(upper);\n        lowers.push(lower);\n\n        eps = epsilon(uppers, lowers, k);\n\n        str_a = nextStrategy(winning_A, max_value);\n        str_b = nextStrategy(losing_B, min_value);\n\n        strs_a.push(str_a);\n        strs_b.push(str_b);\n\n        winning_A = sumArr(winning_A, ttable[str_b]);\n        losing_B = sumArr(losing_B, table[str_a]);\n\n        iterations += 1;\n        if (iterations > 10000) {\n            console.log(\"More 10000 iterations\");\n            break;\n        }\n    }\n\n    const stA = optimal(strs_a, iterations);\n    const stB = optimal(strs_b, iterations);\n\n    const iA = stA.indexOf(max(...stA));\n    const iB = stB.indexOf(max(...stB));\n\n    return `x = ${(iA / dim).toFixed(3)}, y = ${(iB / dim).toFixed(3)}, H = ${\n        table[iA][iB]\n    }`;\n};\n\nconst algorithm = () => {\n    const result = [];\n\n    for (let i = 2; i < 11; ++i) {\n        const t = makeTable(i);\n\n        const [minmax_i, minmax_j] = minMaxIndexes(t, i + 1);\n        const [maxmin_i, maxmin_j] = maxMinIndexes(t, i + 1);\n\n        if (minmax_i === maxmin_i && minmax_j === maxmin_j) {\n            result.push({\n                hasPoint: true,\n                t,\n                text: `n = ${i}, x = ${(minmax_i / i).toFixed(3)}, y = ${(\n                    minmax_j / i\n                ).toFixed(3)}, H = ${t[minmax_i][minmax_j]}`\n            });\n        } else {\n            result.push({\n                hasPoint: false,\n                t,\n                text: bR(t, i + 1)\n            });\n        }\n    }\n\n    return result;\n};\n\nexport {\n    algorithm\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { algorithm } from \"./helpers\";\nimport clsx from \"clsx\";\nimport \"../style.css\";\n\nexport const Lab2 = () => {\n    \n    const [state, setState] = useState({\n        a: -3,\n        b: 1.5,\n        c: 2.5,\n        d: -4,\n        e: -2.2,\n        k: 3\n    });\n\n    const _ = useRef(algorithm());\n    const [render, setRender] = useState(false);\n\n    useEffect(() => {\n        _.current = algorithm();\n        setRender(!render);\n    }, [state]);\n\n    const result = _.current;\n\n    return (\n        <div className=\"lab1-box\">\n            <h1 className=\"title\">\n                Аналитический и численный (Брауна — Робинсон) методы решения\n                непрерывной выпукло-вогнутой антагонистической игры в смешанных\n                стратегиях\n            </h1>\n\n            {result?.map((obj, j) => {\n                const { t, hasPoint, text } = obj;\n\n                return (\n                    <div key={`t-${j}`} className=\"table-min\">\n                        <div className=\"title-min\">{text}</div>\n                        {hasPoint && (\n                            <div className=\"title-min\">Есть седловая точка</div>\n                        )}\n                        <div className=\"box\">\n                            {t?.map((row, i) => (\n                                <div\n                                    key={`row-${j}-item-${i}`}\n                                    className={clsx(\"row-min\", i % 2 && \"grey\")}\n                                >\n                                    {row.map((el, k) => (\n                                        <div\n                                            className={clsx(\n                                                \"item-min\",\n                                                i < 3 && \"small\"\n                                            )}\n                                        >\n                                            {el}\n                                        </div>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n","const { min, max, random, round } = Math;\nconst epsilon = (u, l) => min(...u) - max(...l);\nconst transpose = (m) => m[0].map((_, i) => m.map((x) => x[i]));\nconst minmax = (m) => min(...m.map((row) => max(...row)));\nconst maxmin = (m) => max(...m.map((row) => min(...row)));\nconst sumArr = (a, b) => a.map((_, i) => a[i] + b[i]);\n\nconst nextStrategy = (row, value) => {\n    const r = row.map((v, i) => ({ v, i })).filter((e) => e.v === value);\n    return r[round(random() * (r.length - 1))].i;\n};\nconst cost = (u, l) => (min(...u) + max(...l)) / 2;\nconst optimal = (strs, iters) => {\n    return strs.map((_, i) => {\n        return (strs.filter((v) => v === i).length / iters).toFixed(2);\n    });\n};\n\nconst algorithm = (m) => {\n    const tm = transpose(m),\n        mima = minmax(m),\n        mami = maxmin(tm);\n\n    if (mima === mami) {\n        console.log();\n        return [];\n    }\n\n    const { max, min, round, random } = Math;\n\n    let str_a = round(random() * 2);\n    let str_b = round(random() * 2);\n\n    let strs_a = [str_a],\n        strs_b = [str_b],\n        uppers = [],\n        lowers = [],\n        winning_A = tm[str_a],\n        losing_B = m[str_b];\n\n    let E = 0.1,\n        iterations = 1,\n        eps = 1;\n\n    const result = [[\n        iterations,\n        str_a + 1,\n        str_b + 1,\n        winning_A,\n        losing_B,\n        max(...winning_A).toFixed(3),\n        min(...losing_B).toFixed(3),\n        eps.toFixed(3)\n    ]];\n\n    while (eps > E) {\n        let max_value = max(...winning_A),\n            min_value = min(...losing_B),\n            upper = max_value / iterations,\n            lower = min_value / iterations;\n\n        uppers.push(upper);\n        lowers.push(lower);\n\n        eps = epsilon(uppers, lowers);\n\n        str_a = nextStrategy(winning_A, max_value);\n        str_b = nextStrategy(losing_B, min_value);\n\n        strs_a.push(str_a);\n        strs_b.push(str_b);\n\n        winning_A = sumArr(winning_A, tm[str_b]);\n        losing_B = sumArr(losing_B, m[str_a]);\n\n        iterations += 1;\n        if (iterations > 10000) {\n            console.log(\"More 10000 iterations\");\n            break;\n        }\n\n        result.push([\n            iterations,\n            str_a + 1,\n            str_b + 1,\n            winning_A,\n            losing_B,\n            lower.toFixed(3),\n            upper.toFixed(3),\n            eps.toFixed(3)\n        ]);\n    }\n\n    const V = cost(uppers, lowers).toFixed(3),\n        X = optimal(strs_a, iterations).slice(0, 3).join(\" \"),\n        Y = optimal(strs_b, iterations).slice(0, 3).join(\" \");\n    return [result, V, X, Y, mima, mami];\n};\n\nexport {\n    epsilon,\n    transpose,\n    minmax,\n    maxmin,\n    sumArr,\n    nextStrategy,\n    cost,\n    optimal,\n    algorithm\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { algorithm } from \"./helpers\";\nimport clsx from \"clsx\";\nimport \"../style.css\";\n\nexport const Lab1 = () => {\n    const [state, setState] = useState([\n        [11, 10, 15],\n        [16, 5, 13],\n        [15, 20, 10]\n    ]);\n\n    const area = useRef(null);\n    const _ = useRef(algorithm(state));\n    const [render, setRender] = useState(false);\n\n    useEffect(() => {\n        _.current = algorithm(state);\n        setRender(!render);\n    }, [state]);\n\n    useEffect(() => {\n        area.current.value = state.map((e) => e.join(\" \")).join(\"\\n\")\n    }, []);\n\n    const [result, V, X, Y, mima, mami] = _.current;\n    const headKeys = [\"k\", \"A\", \"B\", \"win str\", \"los str\", \"low\", \"up\", \"eps\"];\n\n    const handleClick = () => {\n        const value = area.current.value.split(\"\\n\");\n        if (value.length !== 3) {\n            alert(\"Неправильно ввод!\");\n            return;\n        }\n\n        const rows = value.map(row => row.split(\" \"));\n        rows.forEach((row) => {\n            if (row.length !== 3) {\n                alert(\"Неправильно ввод!\");\n                return;\n            }\n\n            row.forEach((el) => {\n                if (!+el) {\n                    alert(\"Неправильно ввод!\");\n                    return;\n                }\n            });\n        });\n\n        setState(rows.map(row => row.map(el => +el)));\n    };\n\n    return (\n        <div className=\"lab1-box\">\n            <h1 className=\"title\">\n                Аналитический и численный (Брауна — Робинсон) методы решения\n                антагонистической игры в смешанных стратегиях\n            </h1>\n\n            <textarea\n                ref={area}\n                className=\"area\"\n                rows=\"5\"\n                columns=\"5\"\n            ></textarea>\n\n            <button onClick={handleClick} className=\"btn\">\n                Посчитать\n            </button>\n\n            <div className=\"text\">{`Цена игры между ${Math.min(\n                mima,\n                mami\n            )} и ${Math.max(mima, mami)}`}</div>\n\n            <div className=\"text\">Приближенные смешанные стратегии:</div>\n            <div className=\"text\">V = {V}</div>\n            <div className=\"text\">X = [{X}]</div>\n            <div className=\"text\">Y = [{Y}]</div>\n\n            <div className=\"head-row\">\n                {headKeys?.map((key, i) => (\n                    <div\n                        key={`head-row-${i}`}\n                        className={clsx(\"item\", i < 3 && \"small\")}\n                    >\n                        {key}\n                    </div>\n                ))}\n            </div>\n\n            {result?.map((items, j) => (\n                <div key={`row-${j}`} className={clsx(\"row\", j % 2 && \"grey\")}>\n                    {items?.map((item, i) => (\n                        <div\n                            key={`row-${j}-item-${i}`}\n                            className={clsx(\"item\", i < 3 && \"small\")}\n                        >\n                            {item instanceof Array\n                                ? item.map((e, k) => (\n                                      <span key={`span-${e}-item-${j}-${k}`}>\n                                          {e}\n                                      </span>\n                                  ))\n                                : item}\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Lab3 } from \"./Lab3\";\nimport { Lab2 } from \"./Lab2\";\nimport { Lab1 } from \"./Lab1\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n    Redirect\n} from \"react-router-dom\";\n\nexport const App = () => {\n    return (\n        <div>\n            <Router>\n                <div>\n                    <div className=\"header\">\n                        <nav className=\"nav\">\n                            <NavLink\n                                className=\"link\"\n                                activeClassName=\"active\"\n                                to=\"/lab1\"\n                            >\n                                Lab 1\n                            </NavLink>\n                            <NavLink\n                                className=\"link\"\n                                activeClassName=\"active\"\n                                to=\"/lab2\"\n                            >\n                                Lab 2\n                            </NavLink>\n                            <NavLink\n                                className=\"link\"\n                                activeClassName=\"active\"\n                                to=\"/lab3\"\n                            >\n                                Lab 3\n                            </NavLink>\n                        </nav>\n                    </div>\n                    <Switch>\n                        <Route path=\"/lab1\">\n                            <Lab1 />\n                        </Route>\n                        <Route path=\"/lab2\">\n                            <Lab2 />\n                        </Route>\n                        <Route path=\"/lab3\">\n                            <Lab3 />\n                        </Route>\n\n                        <Redirect\n                            to={{\n                                pathname: \"/lab1\"\n                            }}\n                        />\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}